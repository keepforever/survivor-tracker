{
  "loader": {
    "prefix": "/loader",
    "scope": "typescriptreact,javascriptreact,typescript,javascript",
    "body": [
      "import type { Route } from \"./+types/${TM_FILENAME_BASE}.ts\"",
      "",
      "export async function loader(args: Route.LoaderArgs) {",
      "	return {}",
      "}"
    ]
  },
  "action": {
    "prefix": "/action",
    "scope": "typescriptreact,javascriptreact,typescript,javascript",
    "body": [
      "import type { Route } from \"./+types/${TM_FILENAME_BASE}.ts\"",
      "",
      "export async function action({ request }: Route.ActionArgs) {",
      "	return {}",
      "}"
    ]
  },
  "default": {
    "prefix": "/default",
    "scope": "typescriptreact,javascriptreact,typescript,javascript",
    "body": [
      "import { logObjectDetails } from '~/utils/misc'",
      "import type { Route } from \"./+types/${TM_FILENAME_BASE}\"",
      "",
      "export default function ${TM_FILENAME_BASE/[^a-zA-Z0-9]*([a-zA-Z0-9])([a-zA-Z0-9]*)/${1:/capitalize}${2}/g}({ loaderData }: Route.ComponentProps) {",
      "  logObjectDetails({",
      "    objects: {",
      "      loaderData,",
      "    },",
      "    filename: '${TM_FILENAME_BASE}.tsx',",
      "  })",
      "",
      "  return (",
      "    <div>",
      "      <h1>Hello ${TM_FILENAME_BASE/[^a-zA-Z0-9]*([a-zA-Z0-9])([a-zA-Z0-9]*)/${1:/capitalize}${2}/g} Route</h1>",
      "    </div>",
      "  )",
      "}"
    ]
  },
  "functional": {
    "prefix": "/functional",
    "scope": "typescriptreact,javascriptreact,typescript,javascript",
    "body": [
      "",
      "export function ${TM_FILENAME_BASE/[^a-zA-Z0-9]*([a-zA-Z0-9])([a-zA-Z0-9]*)/${1:/capitalize}${2}/g}() {",
      "",
      "  return (",
      "    <div>",
      "      <h2>Hello ${TM_FILENAME_BASE/[^a-zA-Z0-9]*([a-zA-Z0-9])([a-zA-Z0-9]*)/${1:/capitalize}${2}/g}</h2>",
      "    </div>",
      "  )",
      "}"
    ]
  },
  "headers": {
    "prefix": "/headers",
    "scope": "typescriptreact,javascriptreact,typescript,javascript",
    "body": [
      "import type { Route } from \"./+types/${TM_FILENAME_BASE}.ts\"",
      "export const headers: Route.HeadersFunction = ({ loaderHeaders }) => ({",
      "	'Cache-Control': loaderHeaders.get('Cache-Control') ?? '',",
      "})"
    ]
  },
  "links": {
    "prefix": "/links",
    "scope": "typescriptreact,javascriptreact,typescript,javascript",
    "body": [
      "import type { Route } from \"./+types/${TM_FILENAME_BASE}.ts\"",
      "",
      "export const links: Route.LinksFunction = () => {",
      "  return []",
      "}"
    ]
  },
  "meta": {
    "prefix": "/meta",
    "scope": "typescriptreact,javascriptreact,typescript,javascript",
    "body": [
      "import type { Route } from \"./+types/${TM_FILENAME_BASE}.ts\"",
      "",
      "export const meta: Route.MetaFunction = ({ data }) => [{",
      "  title: 'Title',",
      "}]"
    ]
  },
  "shouldRevalidate": {
    "prefix": "/shouldRevalidate",
    "scope": "typescriptreact,javascriptreact,typescript,javascript",
    "body": [
      "import { type ShouldRevalidateFunctionArgs } from 'react-router'",
      "",
      "export function shouldRevalidate({ defaultShouldRevalidate }: ShouldRevalidateFunctionArgs) {",
      "  return defaultShouldRevalidate",
      "}"
    ]
  },
  "routeFull": {
    "prefix": "/routeFull",
    "scope": "typescriptreact,javascriptreact,typescript,javascript",
    "body": [
      "import { logObjectDetails } from '~/utils/misc'",
      "import type { Route } from \"./+types/${TM_FILENAME_BASE}\"",
      "",
      "export async function loader(args: Route.LoaderArgs) {",
      "  const { request } = args",
      "  return { hello: request.url }",
      "}",
      "",
      "export async function action(args: Route.ActionArgs) {",
      "  const { request } = args",
      "  return { hello: request.url }",
      "}",
      "",
      "export default function ${TM_FILENAME_BASE/[^a-zA-Z0-9]*([a-zA-Z0-9])([a-zA-Z0-9]*)/${1:/capitalize}${2}/g}({ loaderData }: Route.ComponentProps) {",
      "  logObjectDetails({",
      "    objects: {",
      "      loaderData,",
      "    },",
      "    filename: '${TM_FILENAME_BASE}.tsx',",
      "  })",
      "",
      "  return (",
      "    <div>",
      "      <h1>Hello ${TM_FILENAME_BASE/[^a-zA-Z0-9]*([a-zA-Z0-9])([a-zA-Z0-9]*)/${1:/capitalize}${2}/g} Route</h1>",
      "    </div>",
      "  )",
      "}"
    ]
  }
}
